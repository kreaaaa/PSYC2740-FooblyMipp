filter(typeoftrial == "demographics") %>%
select("ID","gender", "age", "education", "race", "hispanic", "dominant_hand", "alert_time", "english")%>%
mutate(across(c("age","education"), ~ replace_na(., NA)))%>%
mutate(across(c("gender","race","hispanic","dominant_hand","alert_time","english"),
~ replace_na(., "NOT_FOUND"))) %>%
mutate(across(c("age","gender","education","race","hispanic", "dominant_hand", "alert_time", "english"),
~ifelse(. == "", "blank",.)))
subject_age= demographics%>%
summarise(mean_age= mean(age, na.rm = TRUE),
sd_age=sd(age, na.rm = TRUE))
gender_distribution= demographics%>%
filter(gender != "blank") %>%
count(gender)
race_distribution= demographics%>%
filter(race != "blank")%>%
count(race)
education_distribution= demographics%>%
filter(education != "blank")%>%
count(education)
trial_data = final_data %>%
filter(typeoftrial == "target") %>%
select(type, correct, block_number, target, correct_key) %>%
filter(block_number == 1) %>%
mutate(correct = fct_recode(correct,
"0" = "false",
"1" = "true")) %>%
mutate(correct = as.numeric(as.character(correct)))
trial_accuracy = trial_data %>%
summarise(mean_accuracy = mean(correct, na.rm = TRUE),
sd_accuracy = sd(correct, na.rm = TRUE))
basic_data = final_data %>%
filter(typeoftrial == "target") %>%
select(ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key)
ggplot(basic_data, aes(x = rt)) +
geom_histogram(binwidth = 1, color = "firebrick2") +
theme_minimal() +
labs(title = "Histogram of Reaction Times", x = "Reaction Time (ms)", y = "Count")
geom_histogram(mapping = aes (x = as.numeric(rt)))
#editing all attention trials to adjust for typos
attention_trials= final_data%>%
filter(typeoftrial == "attention") %>%
select(ID, response, novel1, novel2, correct) %>%
rowwise() %>%
mutate(response = ifelse(is.na(response), "blank", response)) %>%
mutate(across(c(novel1, novel2), ~ replace_na(., "NOT_FOUND"))) %>%
mutate(edit_novel1 = adist(novel1, response),
edit_novel2 = adist(novel2, response)) %>%
mutate(revised_correct = ifelse(edit_novel1 <= 2 |
edit_novel2 <= 2,
1, 0),
mismatch = ifelse(correct == revised_correct, 0, 1)) %>%
ungroup()
## summarize participant accuracy on attention trials
subject_attention_accuracy = attention_trials  %>%
group_by(ID)  %>%
summarise(mean_accuracy = mean(revised_correct))
# find IDs with less than 75% accuracy
low_acc_IDs = subject_attention_accuracy  %>%
filter(mean_accuracy < 0.75)  %>%
pull(ID)
#target data after applying exclusions
priming_data = final_data %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200 , rt< 1500, correct == "true", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs)
priming_accuracy = priming_data %>%
mutate(acc = ifelse(correct == "true", 1,0)) %>%
group_by(ID) %>%
summarize(acc = mean(acc))
priming_data%>%
group_by(condition, ID)%>%
count()%>%
group_by(condition)%>%
count()
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot() +
geom_col(mapping= aes(x= condition, y= mean_rt,
group= relatedness, fill= relatedness),
position = "dodge") +
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness"))
car::Anova(rt_model)
#install.packages("lmerTest")
library(lmerTest)
library(performance)
library(pathwork)
#install.packages("lmerTest")
library(lmerTest)
library(performance)
library(patchwork)
rt_model = lmer(data = priming_data, rt~ relatedness*condition + (1|ID))
car::Anova(rt_model)
nobs(rt_model)
check_model(rt_model)
car::Anova(rt_model)
nobs(rt_model)
print(nobs(rt_model))
check_model(rt_model)
confint(rt_model, level = 0.95)
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt))%>%
mutate(SE = sd_rt/n,
ymin = mean_rt - 1.96*SE,
ymax = mean_rt + 1.96*SE) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = ymin, ymax = ymax),
width = 0.25,
position = position_dodge(width = 0.9))+
geom_point(data = final_data, aes (x = condition, y = mean_rt, group = relatedness),
position = position_jitterdodge(),
alpha = 0.3)+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness"))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt))%>%
mutate(SE = sd_rt/n,
ymin = mean_rt - 1.96*SE,
ymax = mean_rt + 1.96*SE) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = ymin, ymax = ymax),
width = 0.25,
position = position_dodge(width = 0.9))+
geom_point(data = final_data, aes (x = condition, y = mean_rt, group = relatedness),
position = position_jitterdodge(),
alpha = 0.3)+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness"))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt))%>%
mutate(SE = sd_rt/n,
ymin = mean_rt - 1.96*SE,
ymax = mean_rt + 1.96*SE) %>%
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt))%>%
mutate(SE = sd_rt/n,
ymin = mean_rt - 1.96*SE,
ymax = mean_rt + 1.96*SE)
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt))%>%
mutate(SE = sd_rt,
ymin = mean_rt - 1.96*SE,
ymax = mean_rt + 1.96*SE)
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt))%>%
mutate(SE = sd_rt/n,
ymin = mean_rt - 1.96*SE,
ymax = mean_rt + 1.96*SE)
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt))%>%
mutate(SE = sd_rt,
ymin = mean_rt - 1.96*SE,
ymax = mean_rt + 1.96*SE)
priming_data%>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = ymin, ymax = ymax),
width = 0.25,
position = position_dodge(width = 0.9))+
geom_point(data = final_data, aes (x = condition, y = mean_rt, group = relatedness),
position = position_jitterdodge(),
alpha = 0.3)+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness"))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt))
priming_data%>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness"))
priming_data%>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness"))
priming_data%>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
View(priming_data)
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt)) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
priming_data1 = priming_data%>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt)) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
priming_data%>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt)) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
summary_data = priming_data %>%
group_by(condition, relatedness) %>%
summarise(
mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE),
.groups = "drop"
summary_data %>%
summary_data = priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE),
.groups = "drop"
summary_data %>%
summary_data= priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE),
.groups = "drop"
summary_data %>%
priming_data%>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt)) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
priming_data%>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt)) %>%
mean_rt = as.numeric(mean_rt) %>%
sd_rt = as.numeric(sd_rt)
priming_data%>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt),
sd_rt= sd(rt)) %>%
mean_rt = as.numeric(mean_rt) %>%
sd_rt = as.numeric(sd_rt)
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE)) %>%
mutate(mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt))
# ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE)) %>%
mutate(mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt))
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
View(priming_data)
View(priming_accuracy)
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE)) %>%
mutate(mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt))
priming_data%>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
basic_data = final_data %>%
filter(typeoftrial == "target") %>%
select(ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key)
ggplot(basic_data, aes(x = rt)) +
geom_histogram(binwidth = 2, color = "firebrick2") +
theme_minimal() +
labs(title = "Histogram of Reaction Times", x = "Reaction Time (ms)", y = "Count")
geom_histogram(mapping = aes (x = as.numeric(rt)))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE)) %>%
print(mutate(mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt)))
priming_data%>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE)) %>%
print(mutate(mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt)))
priming_data%>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
priming_data%>%
mutate(
mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt)
) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE)) %>%
(mutate(mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt)))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE))
priming_data%>%
mutate(
mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt)
) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE))
priming_data%>%
mutate(
mean_rt = as.numeric(mean_rt),
sd_rt = as.numeric(sd_rt)
) %>%
ggplot(mapping = aes (x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col( position = "dodge")+
geom_errorbar(aes (ymin = mean_rt-sd_rt, ymax = mean_rt+sd_rt,
width = 0.25,
position = position_dodge(width = 0.9))+
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue"))+
labs(title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time") +
guides(fill = guide_legend(title = "Relatedness")))
# Summarise the data and directly use it in the plotting step
priming_data %>%
group_by(condition, relatedness) %>%
summarise(
mean_rt = mean(rt, na.rm = TRUE),
sd_rt = sd(rt, na.rm = TRUE)
) %>%
ggplot(mapping = aes(x = condition, y = mean_rt, group = relatedness, fill = relatedness)) +
geom_col(position = "dodge") +
geom_errorbar(
aes(ymin = mean_rt - sd_rt, ymax = mean_rt + sd_rt),
width = 0.25,
position = position_dodge(width = 0.9)
) +
theme_minimal() +
scale_fill_manual(values = c("firebrick2", "lightblue")) +
labs(
title = "Mean Reaction Time by Condition and Relatedness",
x = "Condition",
y = "Mean Reaction Time"
) +
guides(fill = guide_legend(title = "Relatedness"))
