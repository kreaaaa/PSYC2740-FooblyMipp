priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
View(priming_data)
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot() +
geom_col(mapping= aes(x= condition, y= mean_rt,
group= relatedness, fill= relatedness),
position = "dodge") +
theme_bw() +
scale_fill_manual(values = c("firebrick2", "lightblue"))
load("~/Desktop/PSYC2740/Psyc2740-FooblyMipp/analysis/.RData")
#install.packages("lmerTest")
library(lmerTest)
rt_model = lmer(data = priming_data, rt~ relatedness*condition + (1|ID))
install.packages("lmerTest")
library(lmerTest)
rt_model = lmer(data = priming_data, rt~ relatedness*condition + (1|ID))
library(lmerTest)
rt_model = lmer(data = priming_data, rt~ relatedness*condition + (1|ID))
car::Anova(rt_model)
library(lmerTest)
rt_model = lmer(data = priming_data, rt~ relatedness*condition + (1|ID))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
View(priming_data)
View(priming_data)
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) #%>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) #%>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) #%>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) #%>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) #%>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) #%>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) #%>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
prereg = read.csv("../data/fooblymippprereg.csv") %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot() +
geom_col(mapping= aes(x= condition, y= mean_rt,
group= relatedness, fill= relatedness),
position = "dodge") +
theme_bw() +
scale_fill_manual(values = c("firebrick2", "lightblue"))
library(lmerTest)
rt_model = lmer(data = priming_data, rt~ relatedness*condition + (1|ID))
car::Anova(rt_model)
nobs(rt_model)
check_model = rt_model
library(tidyverse)
prereg = read.csv("../data/fooblymippprereg.csv") %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))
ggplot(data = prereg) +
geom_histogram(mapping = aes (x = as.numeric(rt)))
range(as.numeric(prereg$rt))
prereg = read.csv("../data/fooblymippprereg.csv") %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))%>%
mutate(condition = fct_recode(condition, "non-rhyming" = "1",
"rhyming" = "2"))
levels(prereg$condition)
library(tidyverse)
prereg = read.csv("../data/fooblymippprereg.csv") %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))%>%
mutate(condition = fct_recode(condition, "non-rhyming" = "1",
"rhyming" = "2"))
ggplot(data = prereg) +
geom_histogram(mapping = aes (x = as.numeric(rt)))
range(as.numeric(prereg$rt))
prereg %>%
pull(ID) %>% unique () %>% length
attention_trials= prereg%>%
filter(typeoftrial == "attention") %>%
##filter(condition == "1") %>%
select(ID, response, novel1, novel2, correct) %>%
rowwise() %>%
mutate(response = ifelse(is.na(response), "blank", response)) %>%
mutate(across(c(novel1, novel2), ~ replace_na(., "NOT_FOUND"))) %>%
mutate(edit_novel1 = adist(novel1, response),
edit_novel2 = adist(novel2, response)) %>%
mutate(revised_correct = ifelse(edit_novel1 <= 2 |
edit_novel2 <= 2,
1, 0),
mismatch = ifelse(correct == revised_correct, 0, 1)) %>%
ungroup()
attention_trials  %>%
summarize(mean_accuracy = mean(revised_correct),
sd_accuracy = sd(revised_correct))
## summarize participant accuracy
subject_attention_accuracy = attention_trials  %>%
group_by(ID)  %>%
summarize(mean_accuracy = mean(revised_correct))
# find IDs with less than 75% accuracy
low_acc_IDs = subject_attention_accuracy  %>%
filter(mean_accuracy < 0.75)  %>%
pull(ID)
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot() +
geom_col(mapping= aes(x= condition, y= mean_rt,
group= relatedness, fill= relatedness),
position = "dodge") +
theme_bw() +
scale_fill_manual(values = c("firebrick2", "lightblue"))
library(lmerTest)
rt_model = lmer(data = priming_data, rt~ relatedness*condition + (1|ID))
prereg %>%
pull(ID) %>% unique () %>% length
attention_trials= prereg%>%
filter(typeoftrial == "attention") %>%
##filter(condition == "1") %>%
select(ID, response, novel1, novel2, correct) %>%
rowwise() %>%
mutate(response = ifelse(is.na(response), "blank", response)) %>%
mutate(across(c(novel1, novel2), ~ replace_na(., "NOT_FOUND"))) %>%
mutate(edit_novel1 = adist(novel1, response),
edit_novel2 = adist(novel2, response)) %>%
mutate(revised_correct = ifelse(edit_novel1 <= 2 |
edit_novel2 <= 2,
1, 0),
mismatch = ifelse(correct == revised_correct, 0, 1)) %>%
ungroup()
attention_trials  %>%
summarize(mean_accuracy = mean(revised_correct),
sd_accuracy = sd(revised_correct))
## summarize participant accuracy
subject_attention_accuracy = attention_trials  %>%
group_by(ID)  %>%
summarize(mean_accuracy = mean(revised_correct))
# find IDs with less than 75% accuracy
low_acc_IDs = subject_attention_accuracy  %>%
filter(mean_accuracy < 0.75)  %>%
pull(ID)
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot() +
geom_col(mapping= aes(x= condition, y= mean_rt,
group= relatedness, fill= relatedness),
position = "dodge") +
theme_bw() +
scale_fill_manual(values = c("firebrick2", "lightblue"))
View(prereg)
View(priming_data)
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
attention_trials  %>%
summarize(mean_accuracy = mean(revised_correct),
sd_accuracy = sd(revised_correct))
## summarize participant accuracy
subject_attention_accuracy = attention_trials  %>%
group_by(ID)  %>%
summarize(mean_accuracy = mean(revised_correct))
# find IDs with less than 75% accuracy
low_acc_IDs = subject_attention_accuracy  %>%
filter(mean_accuracy < 0.75)  %>%
pull(ID)
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
attention_trials= prereg%>%
filter(typeoftrial == "attention") %>%
##filter(condition == "1") %>%
select(ID, response, novel1, novel2, correct) %>%
rowwise() %>%
mutate(response = ifelse(is.na(response), "blank", response)) %>%
mutate(across(c(novel1, novel2), ~ replace_na(., "NOT_FOUND"))) %>%
mutate(edit_novel1 = adist(novel1, response),
edit_novel2 = adist(novel2, response)) %>%
mutate(revised_correct = ifelse(edit_novel1 <= 2 |
edit_novel2 <= 2,
1, 0),
mismatch = ifelse(correct == revised_correct, 0, 1)) %>%
ungroup()
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
library(tidyverse)
prereg = read.csv("../data/fooblymippprereg.csv") %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))%>%
mutate(condition = fct_recode(condition, "non-rhyming" = "1",
"rhyming" = "2"))
ggplot(data = prereg) +
geom_histogram(mapping = aes (x = as.numeric(rt)))
range(as.numeric(prereg$rt))
prereg %>%
pull(ID) %>% unique () %>% length
attention_trials= prereg%>%
filter(typeoftrial == "attention") %>%
##filter(condition == "1") %>%
select(ID, response, novel1, novel2, correct) %>%
rowwise() %>%
mutate(response = ifelse(is.na(response), "blank", response)) %>%
mutate(across(c(novel1, novel2), ~ replace_na(., "NOT_FOUND"))) %>%
mutate(edit_novel1 = adist(novel1, response),
edit_novel2 = adist(novel2, response)) %>%
mutate(revised_correct = ifelse(edit_novel1 <= 2 |
edit_novel2 <= 2,
1, 0),
mismatch = ifelse(correct == revised_correct, 0, 1)) %>%
ungroup()
attention_trials  %>%
summarize(mean_accuracy = mean(revised_correct),
sd_accuracy = sd(revised_correct))
## summarize participant accuracy
subject_attention_accuracy = attention_trials  %>%
group_by(ID)  %>%
summarize(mean_accuracy = mean(revised_correct))
# find IDs with less than 75% accuracy
low_acc_IDs = subject_attention_accuracy  %>%
filter(mean_accuracy < 0.75)  %>%
pull(ID)
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%#
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%##
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>% ##
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
View(priming_data)
library(tidyverse)
prereg = read.csv("../data/fooblymippprereg.csv") %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))%>%
mutate(condition = fct_recode(condition, "non-rhyming" = "1",
"rhyming" = "2"))
ggplot(data = prereg) +
geom_histogram(mapping = aes (x = as.numeric(rt)))
range(as.numeric(prereg$rt))
prereg %>%
pull(ID) %>% unique () %>% length
attention_trials= prereg%>%
filter(typeoftrial == "attention") %>%
##filter(condition == "1") %>%
select(ID, response, novel1, novel2, correct) %>%
rowwise() %>%
mutate(response = ifelse(is.na(response), "blank", response)) %>%
mutate(across(c(novel1, novel2), ~ replace_na(., "NOT_FOUND"))) %>%
mutate(edit_novel1 = adist(novel1, response),
edit_novel2 = adist(novel2, response)) %>%
mutate(revised_correct = ifelse(edit_novel1 <= 2 |
edit_novel2 <= 2,
1, 0),
mismatch = ifelse(correct == revised_correct, 0, 1)) %>%
ungroup()
attention_trials  %>%
summarize(mean_accuracy = mean(revised_correct),
sd_accuracy = sd(revised_correct))
## summarize participant accuracy
subject_attention_accuracy = attention_trials  %>%
group_by(ID)  %>%
summarize(mean_accuracy = mean(revised_correct))
# find IDs with less than 75% accuracy
low_acc_IDs = subject_attention_accuracy  %>%
filter(mean_accuracy < 0.75)  %>%
pull(ID)
priming_data = prereg %>% filter(typeoftrial == "target") %>% ##
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>% ##
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>% ##
filter(relatedness %in% c("related", "unrelated")) %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition%in% c("1", "2"))
View(prereg)
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter((relatedness %in% c("related", "unrelated")) & condition %in% c("non-rhyming", "rhyming"))%>%
filter(!ID %in% low_acc_IDs) %>%
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter((relatedness %in% c("related", "unrelated")) & condition %in% c("1", "2"))%>%
filter(!ID %in% low_acc_IDs) %>%
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter((relatedness %in% c("related", "unrelated")) & condition c("1", "2"))%>%
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated") %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition %in% )c("1", "2")
priming_data = prereg %>% filter(typeoftrial == "target") %>%
select (ID, rt, condition, relatedness, prime, response, type, correct, block_number, target, correct_key) %>%
filter(!is.na(rt), rt> 200, rt< 1500, correct == "TRUE", block_number == 1) %>%
filter(relatedness %in% c("related", "unrelated") %>%
filter(!ID %in% low_acc_IDs) %>%
filter(condition %in% c("1", "2")
View(attention_trials)
View(attention_trials_1)
View(prereg)
View(priming_data)
View(subject_attention_accuracy)
nrow(final_data)
load("~/Library/CloudStorage/OneDrive-BowdoinCollege/Desktop/PSYC 2740/the experiment/PSYC2740-FooblyMipp/analysis/.RData")
View(attention_trials)
View(attention_trials_1)
View(prereg)
View(priming_data)
View(subject_attention_accuracy)
sona_data = read.csv("../data/savic-rhyming-sona.csv") %>%
select(-sona_id) %>% mutate(data_source = "sona")
library(tidyverse)
sona_data = read.csv("../data/savic-rhyming-sona.csv") %>%
select(-sona_id) %>% mutate(data_source = "sona")
# repeat for prolific
prolific_data = read.csv ("../data/savic-rhyming-prolific.csv") %>%
select(-PROLIFIC_PID) %>% mutate(data_source = "prolific")
# bind
final_data = rbind(sona_data, prolific_data) %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))%>%
mutate(condition = fct_recode(condition,
"non-rhyming" = "1",
"rhyming" = "2"))
View(prolific_data)
final_data = rbind(sona_data, prolific_data) %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))%>%
mutate(condition = fct_recode(condition,
"non-rhyming" = "1",
"rhyming" = "2"))
final_data = rbind(sona_data, prolific_data) %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))%>%
mutate(condition = fct_recode(condition,
"non-rhyming" = "1",
"rhyming" = "2"))
prolific_data <- prolific_data %>% select(names(sona_data))
final_data = rbind(sona_data, prolific_data) %>%
mutate(rt = as.numeric(rt),
relatedness = as.factor(relatedness),
condition = as.factor(condition))%>%
mutate(condition = fct_recode(condition,
"non-rhyming" = "1",
"rhyming" = "2"))
View(final_data)
nrow(final_data)
ncol(final_data)
final_data%>% group_by(subject)%>% count()
View(final_data)
final_data%>% group_by(ID)%>% count()
View(final_data)
final_data = rbind(sona_data, prolific_data) %>%
mutate(condition = as.factor(condition),
relatedness= as.factor(relatedness))
levels(final_data$condition)
levels(final_data$relatedness)
ggplot(data = final_data) +
geom_histogram(mapping = aes (x = as.numeric(rt)))
range(as.numeric(prereg$rt))
attention_trials= prereg%>%
filter(typeoftrial == "attention") %>%
##filter(condition == "1") %>%
select(ID, response, novel1, novel2, correct) %>%
rowwise() %>%
mutate(response = ifelse(is.na(response), "blank", response)) %>%
mutate(across(c(novel1, novel2), ~ replace_na(., "NOT_FOUND"))) %>%
mutate(edit_novel1 = adist(novel1, response),
edit_novel2 = adist(novel2, response)) %>%
mutate(revised_correct = ifelse(edit_novel1 <= 2 |
edit_novel2 <= 2,
1, 0),
mismatch = ifelse(correct == revised_correct, 0, 1)) %>%
ungroup()
attention_trials  %>%
summarize(mean_accuracy = mean(revised_correct),
sd_accuracy = sd(revised_correct))
## summarize participant accuracy
subject_attention_accuracy = attention_trials  %>%
group_by(ID)  %>%
summarize(mean_accuracy = mean(revised_correct))
# find IDs with less than 75% accuracy
low_acc_IDs = subject_attention_accuracy  %>%
filter(mean_accuracy < 0.75)  %>%
pull(ID)
library(lmerTest)
rt_model = lmer(data = priming_data, rt~ relatedness*condition + (1|ID))
car::Anova(rt_model)
nobs(rt_model)
# load packages
check_model(rt_model)
View(priming_data)
final_data %>%
group_by(condition, relatedness) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot() +
geom_col(mapping= aes(x= condition, y= mean_rt,
group= relatedness, fill= relatedness),
position = "dodge") +
theme_bw() +
scale_fill_manual(values = c("firebrick2", "lightblue"))
library(lmerTest)
rt_model = lmer(data = final_data, rt~ relatedness*condition + (1|ID))
View(rt_model)
